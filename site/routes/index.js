'use strict';

let express = require('express');
let Auth = require('../helpers/auth');
let User = require('../models/user');
let router = express.Router();

router.get('/', function(req, res, next) {

	let promises = [];

	// Attempt to login automatically
	if (req.session.loggedIn != 1 && req.cookies.accessToken && req.cookies.userId && req.cookies.accessToken.length > 0) {
		let accessToken = req.cookies.accessToken;
		let userId = req.cookies.userId;

		if (Auth.validateAccessTokenForUser(accessToken, userId)) {
			let p = User.doesUserExist(userId);

			promises.push(p);

			p.then((exists) => {
				if(exists)
				{
					console.log('Automatically logged in');
					req.session.loggedIn = 1;
					req.session.accessToken = accessToken;
					req.session.userId = userId;
					req.session.save();
				}
			});
		}
	}

	Promise.all(promises).then(() => {
		// Redirect if not logged in
		if (req.session.loggedIn != 1) {
			console.log('No Log in found');
			res.render('login', { title: 'Login' });
			return;
		}

		res.render('index', { title: 'Express2', items: {} });
	});
});

router.get('/info', function(req, res, next) {
	res.render('info', {});
	return;
});

router.get('/sockets', function(req, res, next) {
	res.render('sockets', {});
	return;
});

// LOGOUT
router.get('/logout', function(req, res, next) {
  req.session.loggedIn = 0;

  res.cookie('userId', '', { expires: new Date()});
  res.cookie('accessToken', '', { expires: new Date()});

  res.render('logout', { title: 'Signed Out' });
});

// MISC

// this is the keys required by the client - autogenerated from .env file
router.get('/javascripts/keys.js', function(req, res, next) {
    res.setHeader('Content-Type', 'text/javascript');

    let script = 'var GOOGLE_CLIENT_ID = "' + process.env.GOOGLE_CLIENT_ID + '";';

    res.send(script);
});

module.exports = router;
